name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel any in-progress runs on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-msrv:
    name: Check (MSRV)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install MSRV toolchain (1.68.2)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo check
        run: cargo check --all-targets --features std

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Test on stable, beta, and nightly. Allow nightly to fail.
        rust: [stable, beta, nightly]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --all-features

      # Only run coverage on the stable toolchain
      - name: Run tarpaulin for coverage
        if: matrix.rust == 'stable'
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --all-features --workspace --out Xml

      - name: Upload to codecov.io
        if: matrix.rust == 'stable'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

    continue-on-error: ${{ matrix.rust == 'nightly' }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings